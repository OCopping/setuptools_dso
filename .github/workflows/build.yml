name: setuptools-dso

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.python-version }} / ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, 3.x]
        exclude:
          # missing required (old) Microsoft Visual C++ 9.0
          - os: windows-latest
            python-version: 2.7
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Builder Info
        run: |
          which python
          python --version
          python -m pip --version
      - name: Test
        run: |
          # capture other deps
          pip download -d dist setuptools wheel
          python setup.py sdist --formats=gztar
          ls dist
          # build from source tar to ensure completeness
          pip install -v --no-index -f dist setuptools_dso
      - name: Test Example wheel
        run: |
          ls dist
          cd example
          python setup.py clean -a
          git clean -fdx .
          pip install -v --no-index -f ../dist .
          cd ..
          python -m dsodemo.cli
      - name: Test Example inplace
        run: |
          cd example
          python setup.py clean -a
          git clean -fdx .
          python setup.py -v build_dso -i
          python setup.py -v build_dso -i -f  # incremental recompile
          python setup.py -v build_ext -i
          (cd src && python -m dsodemo.cli)
          cd ..

  upload:
    runs-on: ubuntu-latest
    needs: test
    name: Upload
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          twine -h
      - name: setup.py sdist
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          python setup.py sdist
          ls dist/setuptools_dso-*.tar.*
          tar -taf dist/setuptools_dso-*.tar.*
      - name: Save tar
        uses: actions/upload-artifact@v2
        with:
          name: tar
          path: dist/setuptools_dso-*.tar.*
      - name: Upload
        if: github.event_name=='push' && github.ref=='refs/heads/master'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --skip-existing dist/*
